{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://bedrock-studio.github.io/bedrock-json-schemas/geometry.1.12.0.json",
  "title": "Geometry",
  "type": "object",
  "properties": {
    "format_version": {
      "type": "string",
      "enum": ["1.12.0", "1.14.0"]
    },
    "minecraft:geometry": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "description": {
            "type": "object",
            "properties": {
              "identifier": {
                "type": "string"
              },
              "visible_bounds_width": {
                "description": "Width of the visibility bounding box (in model space units).",
                "type": "number"
              },
              "visible_bounds_height": {
                "description": "Height of the visible bounding box (in model space units).",
                "type": "number"
              },
              "visible_bounds_offset": {
                "description": "Offset of the visibility bounding box from the entity location point (in model space units).",
                "$ref": "meta.json#/definitions/coordinates_3d"
              },
              "texture_width": {
                "description": "Assumed width in texels of the texture that will be bound to this geometry.",
                "type": "number"
              },
              "texture_height": {
                "description": "Assumed height in texels of the texture that will be bound to this geometry.",
                "type": "number"
              },
              "preserve_model_pose": {
                "type": "boolean"
              },
              "animationArmsDown": {
                "type": "boolean"
              },
              "animationArmsOutFront": {
                "type": "boolean"
              },
              "animationStationaryLegs": {
                "type": "boolean"
              },
              "animationSingleLegAnimation": {
                "type": "boolean"
              },
              "animationSingleArmAnimation": {
                "type": "boolean"
              },
              "animationStatueOfLibertyArms": {
                "type": "boolean"
              },
              "animationDontShowArmor": {
                "type": "boolean"
              },
              "animationNoHeadBob": {
                "type": "boolean"
              },
              "animationUpsideDown": {
                "type": "boolean"
              },
              "animationInvertedCrouch": {
                "type": "boolean"
              }
            },
            "required": [
              "identifier"
            ],
            "additionalProperties": false
          },
          "cape": {
            "type": "string"
          },
          "bones": {
            "description": "Bones define the 'skeleton' of the mob: the parts that can be animated, and to which geometry and other bones are attached.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Animation files refer to this bone via this identifier.",
                  "type": "string"
                },
                "reset": {
                  "type": "boolean"
                },
                "neverRender": {
                  "type": "boolean"
                },
                "parent": {
                  "description": "Bone that this bone is relative to.  If the parent bone moves, this bone will move along with it.",
                  "type": "string"
                },
                "pivot": {
                  "description": "The bone pivots around this point (in model space units).",
                  "$ref": "meta.json#/definitions/coordinates_3d"
                },
                "rotation": {
                  "description": "This is the initial rotation of the bone around the pivot, pre-animation (in degrees, x-then-y-then-z order).",
                  "$ref": "meta.json#/definitions/coordinates_3d"
                },
                "bind_pose_rotation": {
                  "$ref": "meta.json#/definitions/coordinates_3d"
                },
                "mirror": {
                  "description": "Mirrors the UV's of the un-rotated cubes along the x axis, also causes the east/west faces to get flipped.",
                  "type": "boolean"
                },
                "inflate": {
                  "description": "Grow this box by this additive amount in all directions (in model space units).",
                  "type": "number"
                },
                "debug": {
                  "type": "boolean"
                },
                "render_group_id": {
                  "type": "integer"
                },
                "cubes": {
                  "description": "This is the list of cubes associated with this bone.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "origin": {
                        "description": "This point declares the un-rotated lower corner of cube (smallest x/y/z value in model space units).",
                        "$ref": "meta.json#/definitions/coordinates_3d"
                      },
                      "size": {
                        "description": "The cube extends this amount relative to its origin (in model space units).",
                        "$ref": "meta.json#/definitions/coordinates_3d"
                      },
                      "rotation": {
                        "description": "The cube is rotated by this amount (in degrees, x-then-y-then-z order) around the pivot.",
                        "$ref": "meta.json#/definitions/coordinates_3d"
                      },
                      "pivot": {
                        "description": "If this field is specified, rotation of this cube occurs around this point, otherwise its rotation is around the center of the box.",
                        "$ref": "meta.json#/definitions/coordinates_3d"
                      },
                      "inflate": {
                        "description": "Grow this box by this additive amount in all directions (in model space units), this field overrides the bone's inflate field for this cube only.",
                        "type": "number"
                      },
                      "mirror": {
                        "description": "Mirrors this cube about the un-rotated x axis (effectively flipping the east / west faces), overriding the bone's 'mirror' setting for this cube.",
                        "type": "boolean"
                      },
                      "uv": {
                        "oneOf": [
                          {
                            "description": "Specifies the upper-left corner on the texture for the start of the texture mapping for this box.",
                            "$ref": "meta.json#/definitions/coordinates_2d"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "north": {
                                "description": "Specifies the UV's for the face that stretches along the x and y axes, and faces the -z axis.",
                                "$ref": "#/definitions/face_uv"
                              },
                              "south": {
                                "description": "Specifies the UV's for the face that stretches along the x and y axes, and faces the z axis",
                                "$ref": "#/definitions/face_uv"
                              },
                              "east": {
                                "description": "Specifies the UV's for the face that stretches along the z and y axes, and faces the x axis",
                                "$ref": "#/definitions/face_uv"
                              },
                              "west": {
                                "description": "Specifies the UV's for the face that stretches along the z and y axes, and faces the -x axis",
                                "$ref": "#/definitions/face_uv"
                              },
                              "up": {
                                "description": "Specifies the UV's for the face that stretches along the x and z axes, and faces the y axis",
                                "$ref": "#/definitions/face_uv"
                              },
                              "down": {
                                "description": "Specifies the UV's for the face that stretches along the x and z axes, and faces the -y axis",
                                "$ref": "#/definitions/face_uv"
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "locators": {
                  "description": "This is a list of locators associated with this bone.  A locator is a point in model space that tracks a particular bone as the bone animates (by maintaining it's relationship to the bone through the animation).",
                  "type": "object",
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "offset": {
                            "description": "Position of the locator in model space.",
                            "$ref": "meta.json#/definitions/coordinates_3d"
                          },
                          "rotation": {
                            "description": "Rotation of the locator in model space.",
                            "$ref": "meta.json#/definitions/coordinates_3d"
                          },
                          "ignore_inherited_scale": {
                            "description": "Discard scale inherited from parent bone.",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "description": "Position of the locator in model space.",
                        "$ref": "meta.json#/definitions/coordinates_3d"
                      }
                    ]
                  }
                },
                "poly_mesh": {
                  "description": "***EXPERIMENTAL*** A triangle or quad mesh object.  Can be used in conjunction with cubes and texture geometry.",
                  "type": "object",
                  "properties": {
                    "normalized_uvs": {
                      "description": "If true, UVs are assumed to be [0-1].  If false, UVs are assumed to be [0-texture_width] and [0-texture_height] respectively.",
                      "type": "boolean"
                    },
                    "positions": {
                      "description": "Vertex positions for the mesh.  Can be either indexed via the \"polys\" section, or be a quad-list if mapped 1-to-1 to the normals and UVs sections.",
                      "$ref": "meta.json#/definitions/coordinates_3d"
                    },
                    "normals": {
                      "description": "Vertex normals.  Can be either indexed via the \"polys\" section, or be a quad-list if mapped 1-to-1 to the positions and UVs sections.",
                      "$ref": "meta.json#/definitions/coordinates_3d"
                    },
                    "uvs": {
                      "description": "Vertex UVs.  Can be either indexed via the \"polys\" section, or be a quad-list if mapped 1-to-1 to the positions and normals sections.",
                      "$ref": "meta.json#/definitions/coordinates_2d"
                    },
                    "polys": {
                      "oneOf": [
                        {
                          "description": "If not specifying vertex indices, arrays of data must be a list of tris or quads, set by making this property either \"tri_list\" or \"quad_list\"",
                          "type": "string",
                          "enum": [
                            "tri_list",
                            "quad_list"
                          ]
                        },
                        {
                          "description": "Poly element indices, as an array of polygons, each an array of either three or four vertices, each an array of indices into positions, normals, and UVs (in that order).",
                          "type": "array",
                          "items": {
                            "description": "A Polygon, defined by 3 or 4 vertices",
                            "type": "array",
                            "minItems": 3,
                            "maxItems": 4,
                            "items": {
                              "description": "A Vertex, defined by a \"position\" index, a \"normal\" index, and a \"uv\" index",
                              "$ref": "meta.json#/definitions/coordinates_3d"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "polys"
                  ],
                  "additionalProperties": false
                },
                "texture_meshes": {
                  "description": "***EXPERIMENTAL*** Adds a mesh to the bone's geometry by converting texels in a texture into boxes.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "texture": {
                        "description": "The friendly-named texture to use.",
                        "type": "string"
                      },
                      "position": {
                        "description": "The position of the pivot point after rotation (in *entity space* not texture or bone space) of the texture geometry",
                        "$ref": "meta.json#/definitions/coordinates_3d"
                      },
                      "local_pivot": {
                        "description": "The pivot point on the texture (in *texture space* not entity or bone space) of the texture geometry",
                        "$ref": "meta.json#/definitions/coordinates_3d"
                      },
                      "rotation": {
                        "description": "The rotation (in degrees) of the texture geometry relative to the offset",
                        "$ref": "meta.json#/definitions/coordinates_3d"
                      },
                      "scale": {
                        "description": "The scale (in degrees) of the texture geometry relative to the offset",
                        "$ref": "meta.json#/definitions/coordinates_3d"
                      }
                    },
                    "required": [
                      "texture"
                    ],
                    "additionalProperties": false
                  }
                }
              },
              "required": [
                "name"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "description"
        ],
        "additionalProperties": false
      }
    }
  },
  "required": [
    "format_version",
    "minecraft:geometry"
  ],
  "additionalProperties": false,
  "definitions": {
    "face_uv": {
      "type": "object",
      "properties": {
        "uv": {
          "description": "Specifies the uv origin for the face. For this face, it is the upper-left corner, when looking at the face with y being up.",
          "$ref": "meta.json#/definitions/coordinates_2d"
        },
        "uv_size": {
          "description": "The face maps this many texels from the uv origin. If not specified, the box dimensions are used instead.",
          "$ref": "meta.json#/definitions/coordinates_2d"
        },
        "material_instance": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}